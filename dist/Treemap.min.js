(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Treemap=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){"use strict";var packageInfo=require("./package.json");function Treemap(){this.parent;this.data;this.count=0;this.items=[];this.x=0;this.y=0;this.w=0;this.h=0;this.options;if(arguments.length>=4){this.x=arguments[0];this.y=arguments[1];this.w=arguments[2];this.h=arguments[3];this.options=arguments[4]}else{this.parent=arguments[0];this.data=arguments[1];this.count=arguments[2]||0}this.x=this.x||0;this.y=this.y||0;this.w=this.w||0;this.h=this.h||0;this.minCount=0;this.maxCount=0;this.level=0;if(this.parent)this.level=this.parent.level+1;this.depth=0;this.itemCount=1;this.index=0;this.root=this;this.isRoot=true;if(this.parent){this.root=this.parent.root;this.isRoot=false}this.options=this.options||this.root.options;this.ignored=false;Treemap.prototype.addData=function(data,keys){if(keys){if(keys.data)this.data=data[keys.data];else this.data=data;if(typeof data==="number")this.count=data;else this.count=data[keys.count]||0;var children=data;if(keys.children)children=data[keys.children];if(children instanceof Array){children.forEach(function(child){var t=new Treemap(this);this.items.push(t);t.addData(child,keys)}.bind(this));return true}return false}else{var i=this.items.findIndex(function(el){return el.data==data});if(i>=0){this.items[i].count++;return false}else{this.items.push(new Treemap(this,data,1))}return true}return false};Treemap.prototype.addTreemap=function(data,count){var t=new Treemap(this,data,count);this.items.push(t);return t};Treemap.prototype.sumUpCounters=function(){if(this.options.ignore instanceof Array){if(this.options.ignore.indexOf(this.data)>=0){this.ignored=true}else{this.ignored=false}}if(this.items.length==0){if(this.ignored)return 0}else{this.minCount=Number.MAX_VALUE;this.maxCount=0;this.depth=0;this.itemCount=1;this.count=0;if(this.ignored)return 0;for(var i=0;i<this.items.length;i++){var sum=this.items[i].sumUpCounters();this.count+=sum;this.minCount=min(this.minCount,sum);this.maxCount=max(this.maxCount,sum);this.depth=max(this.depth,this.items[i].depth+1);this.itemCount+=this.items[i].itemCount}}return this.count};Treemap.prototype.calculate=function(){if(this.items.length==0)return;if(this==this.root)this.sumUpCounters();if(this.ignored){this.x=-1e5;this.y=0;this.w=0;this.h=0;return}if(this.options.sort==true||this.options.sort==undefined){this.items.sort(function(a,b){if(a.count<b.count)return 1;if(a.count>b.count)return-1;else return 0})}else{shuffleArray(this.items)}for(var i=0;i<this.items.length;i++){this.items[i].index=i}var restSum=this.count;var pad=this.options.padding||0;var restX=this.x+pad;var restY=this.y+pad;var restW=this.w-pad*2;var restH=this.h-pad*2;var actIndex=0;while(actIndex<this.items.length){var isHorizontal=true;var a=restW;var b=restH;if(this.options.direction!="horizontal"){if(restW>restH||this.options.direction=="vertical"){isHorizontal=false;a=restH;b=restW}}var rowSum=0;var rowCount=0;var avRelPrev=Number.MAX_VALUE;for(var i=actIndex;i<this.items.length;i++){rowSum+=this.items[i].count;rowCount++;var percentage=rowSum/restSum;var bLen=b*percentage;var avRel=a/rowCount/bLen;if(avRel<1||i==this.items.length-1){if(avRelPrev<1/avRel){rowSum-=this.items[i].count;rowCount--;bLen=b*rowSum/restSum;i--}var aPos=restX;var bPos=restY;var aLen=restW;if(!isHorizontal){aPos=restY;bPos=restX;aLen=restH}for(var j=actIndex;j<=i;j++){var aPart=aLen*this.items[j].count/rowSum;if(isHorizontal){this.items[j].x=aPos;this.items[j].y=bPos;this.items[j].w=aPart;this.items[j].h=bLen}else{this.items[j].x=bPos;this.items[j].y=aPos;this.items[j].w=bLen;this.items[j].h=aPart}this.items[j].w=max(this.items[j].w,0);this.items[j].h=max(this.items[j].h,0);this.items[j].calculate();aPos+=aPart}if(isHorizontal){restY+=bLen;restH-=bLen}else{restX+=bLen;restW-=bLen}restSum-=rowSum;break}avRelPrev=avRel}actIndex=i+1}};Treemap.prototype.draw=function(drawItemFunction){if(!this.ignored){if(drawItemFunction)drawItemFunction(this);else rect(this.x,this.y,this.w,this.h);for(var i=0;i<this.items.length;i++){this.items[i].draw(drawItemFunction)}}}}function shuffleArray(array){for(var i=array.length-1;i>0;i--){var j=floor(random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp}}module.exports=Treemap},{"./package.json":2}],2:[function(require,module,exports){module.exports={name:"Treemap.js",version:"0.1.0",description:"A javascript library for calculating a treemap.",license:"MIT",main:"index.js",scripts:{bundle:"browserify index.js --standalone Treemap -o dist/Treemap.js",dist:"npm run bundle && browserify index.js --standalone Treemap | uglifyjs > dist/Treemap.min.js && copyfiles -u 1 dist/Treemap.js examples/lib/",documentation:"documentation readme index.js --section=Reference"},repository:{type:"git",url:"https://github.com/bohnacker/Treemap.js"},keywords:["dataviz","graph","treemap","recursive"],author:"Hartmut Bohnacker <mail@hartmut-bohnacker.de>",bugs:{url:"https://github.com/bohnacker/Treemap.js/issues"},homepage:"https://github.com/bohnacker/Treemap.js",devDependencies:{browserify:"^14.4.0",documentation:"^5.2.2","uglify-js":"^3.0.28"}}},{}]},{},[1])(1)});
